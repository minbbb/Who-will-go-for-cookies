from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, InlineQueryHandler
from telegram import InlineQueryResultArticle, InputTextMessageContent
from uuid import uuid4
import random

updater = Updater(token='TOKEN', use_context=True)

variationsRU = ("–±–µ–∂–∏—Ç –∑–∞ –ø–µ—á–µ–Ω—é—Ö–∞–º–∏", "–∫–æ–≤—ã–ª—è–µ—Ç –∑–∞ –ø–µ—á–µ–Ω—å–µ–º", "—Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ –º—á–∏—Ç—Å—è –∑–∞ –∫—É–∫–∏—Å–∞–º–∏", "–≤ —Å–ª–æ—É–º–æ —É–Ω–æ—Å–∏—Ç—Å—è –∑–∞ –ø–µ—á–µ–Ω–±–∫–∞–º–∏")
variationsEN = ("running for cookies", "goes in slow motion for cookies")

def start(update, context):
	if update.message.from_user.language_code == "ru":
		context.bot.send_message(chat_id=update.message.chat_id, text="–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∏–º–µ–Ω–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –Ω–∞ –ø–æ—Ö–æ–¥ –∑–∞ –ø–µ—á–µ–Ω—å–∫–∞–º–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.\n–ò —è —Å–∫–∞–∂—É –∫—Ç–æ –ø–æ–π–¥—ë—Ç –∑–∞ –ø–µ—á–µ–Ω—å–µ–º))0)")
	else:
		context.bot.send_message(chat_id=update.message.chat_id, text="Send me the names of the candidates for the campaign for cookies through the space.\nAnd I will tell you who will go for cookies))0)")

def cookie(update, context):
	res = random.choice(update.message.text.split())
	if update.message.from_user.language_code == "ru":
		res += " " + random.choice(variationsRU)
	else:
		res += " " + random.choice(variationsEN)
	context.bot.send_message(chat_id=update.message.chat_id, text=res)

def inlinequery(update, context):
	if update.inline_query.query != "":
		query = update.inline_query.query.split()
		res = random.choice(query)
		if update.inline_query.from_user.language_code == "ru":
			res += " " + random.choice(variationsRU)
		else:
			res += " " + random.choice(variationsEN)
		update.inline_query.answer([InlineQueryResultArticle(id=uuid4(), title="Choose your fighterüç™", input_message_content=InputTextMessageContent(res))], cache_time=1)

updater.dispatcher.add_handler(CommandHandler('start', start))
updater.dispatcher.add_handler(MessageHandler(Filters.text, cookie))
updater.dispatcher.add_handler(InlineQueryHandler(inlinequery))
updater.start_polling()
updater.idle()
